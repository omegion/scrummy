name: Build

on:
  push:
    tags:
      - 'v*'
jobs:
  push_to_registry:
    name: Push Docker image to GitHub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_REGISTRY_TOKEN }}

      - name: Build and push to GitHub
        id: github_build
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ghcr.io/omegion/scrummy:latest,ghcr.io/omegion/scrummy:${{ steps.get_version.outputs.VERSION }}
          platforms: linux/amd64,linux/arm64

#  release:
#    name: Create Release
#    runs-on: 'ubuntu-latest'
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#      - name: Get the version
#        run: |
#          VERSION=$(echo $GITHUB_REF | cut -d / -f 3)
#          echo "VERSION=$VERSION" >> $GITHUB_ENV
#      - name: Release with Notes
#        uses: softprops/action-gh-release@v1
#        with:
#          name: Release ${{env.VERSION}}
#          body_path: ".github/RELEASE_NOTES.md"
#          draft: false
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
